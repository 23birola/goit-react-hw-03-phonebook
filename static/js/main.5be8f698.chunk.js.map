{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactListItem/ContactListItem.module.css","App.module.css","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ContactForm","onSubmit","className","css","contactForm","htmlFor","type","name","id","formInput","pattern","title","required","ContactListItem","contact","deleteContact","contactItem","number","onClick","ContactList","contacts","contactList","map","Filter","filterByName","filter","filterInput","onChange","App","state","e","preventDefault","target","elements","value","uuidv4","find","toLowerCase","toast","error","setState","prevState","handleChange","filterName","console","log","handleFilter","includes","contactId","JSON","parse","localStorage","getItem","this","prevProps","prevContacts","nextContacts","setItem","stringify","selectedContacts","container","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5be8f698.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__uLm0r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"ContactListItem_name__1LyVy\",\"number\":\"ContactListItem_number__1W7yY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__9-mDF\"};","import PropTypes from 'prop-types';\r\nimport css from './ContactForm.module.css';\r\n\r\nconst ContactForm = ({ onSubmit }) => {\r\n  return <form onSubmit={onSubmit} className={css.contactForm}>\r\n    <label htmlFor=\"name\">Name</label>\r\n    <input\r\n      type=\"text\"\r\n      name=\"name\"\r\n      id=\"name\"\r\n      className={css.formInput}\r\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n      title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n       required\r\n      />\r\n    <label htmlFor=\"number\">Number</label>\r\n    <input\r\n     type=\"tel\"\r\n     name=\"number\"\r\n     id=\"number\"\r\n     className={css.formInput}\r\n     pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n     title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n     required\r\n    />\r\n    <button type=\"submit\">Add contact</button>\r\n    </form>\r\n}\r\n\r\nContactForm.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired\r\n};\r\nexport default ContactForm;","import PropTypes from 'prop-types';\r\nimport css from './ContactListItem.module.css';\r\n\r\nconst ContactListItem = ({contact, deleteContact}) => {\r\nreturn (\r\n    <li className={css.contactItem}>\r\n        <span className={css.name}>{contact.name}</span>\r\n        <span className={css.number}>{contact.number}</span>\r\n        <button type=\"button\" onClick={() => deleteContact(contact.id)}>Delete</button>\r\n    </li>);\r\n}\r\n    \r\nContactListItem.propTypes = {\r\n    contact: PropTypes.object.isRequired,\r\n    deleteContact: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ContactListItem;","import PropTypes from 'prop-types';\r\nimport css from './ContactList.module.css';\r\n\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\r\n\r\n\r\nconst ContactList = ({ contacts, deleteContact }) => {\r\n  return (\r\n      <ul className={css.contactList}>\r\n        {contacts.map(contact =>\r\n          <ContactListItem contact={contact} key={contact.id} deleteContact={deleteContact}/>)}\r\n      </ul>);\r\n}\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.array.isRequired,\r\n    deleteContact: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ContactList;","import PropTypes from 'prop-types';\r\nimport css from './Filter.module.css';\r\n\r\nconst Filter = ({ filterByName }) => {\r\n    return (\r\n        <div className={css.filter}>\r\n            <label htmlFor=\"filter\">Find contacts by name</label>\r\n            <input type=\"text\" name=\"filter\" id=\"filter\" className={css.filterInput} onChange={filterByName} />\r\n        </div>);\r\n};\r\n\r\nFilter.propTypes = {\r\n    filterByName: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Filter;","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport toast, { Toaster } from 'react-hot-toast';\n\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\nimport css from './App.module.css';\n\nexport default class App extends Component {\n\n  state = {\n    contacts: [\n    {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n    ],\n    filter: '',\n  };\n\n   componentDidMount() {\n    const contacts = JSON.parse(localStorage.getItem(\"contacts\"));\n\n    if (contacts) {\n      this.setState({ contacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevContacts = prevState.contacts;\n    const nextContacts = this.state.contacts;\n\n    if (prevContacts !== nextContacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(nextContacts));\n    }\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    const name = e.target.elements.name.value;\n    const number = e.target.elements.number.value;\n    const id = uuidv4();\n\n    const existingContact = this.state.contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase());\n    if (existingContact) { return toast.error(`${name} is already in contacts!!!`) };\n\n    this.setState((prevState) => ({ contacts: [...prevState.contacts, {id, name, number}] \n    }))\n\n    e.target.elements.name.value = \"\";\n    e.target.elements.number.value = \"\";\n  }\n\n  handleChange = (e) => {\n    const filterName = e.target.value.toLowerCase();\n    console.log(filterName);\n    this.setState({ filter: filterName });\n  }\n\n  handleFilter = () => {\n    if (!this.state.filter) { return }\n    else {\n      return this.state.contacts.filter(contact => contact.name.toLowerCase().includes(this.state.filter));\n    }\n  }\n\n  deleteContact = contactId => {\n    console.log(contactId);\n    this.setState(prevState => {\n      return {\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId)\n    }})\n  }\n\n  render() {\n    const selectedContacts = this.handleFilter();\n\n    return (\n      <div className={css.container}>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={this.onSubmit}/>\n        \n      <h2>Contacts</h2>\n      <Filter filterByName={this.handleChange}/>\n        {!this.state.filter && <ContactList contacts={this.state.contacts} deleteContact={this.deleteContact}/>}\n        {this.state.filter && <ContactList contacts={selectedContacts} deleteContact={this.deleteContact}/>}\n      <Toaster/>\n      </div>\n    )}\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}